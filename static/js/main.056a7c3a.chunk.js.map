{"version":3,"sources":["App.js","index.js"],"names":["App","useState","calc","setCalc","res","setRes","ops","updateCalc","value","includes","slice","eval","toString","createDigits","digits","i","push","onClick","calculate","deleteLast","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+tBACMA,IAAM,SAANA,MACJ,cAAwBC,oDAAS,IAAjC,oMAAOC,KAAP,cAAaC,QAAb,cACA,WAAsBF,oDAAS,IAA/B,qMAAOG,IAAP,cAAYC,OAAZ,cAEMC,IAAM,CAAC,IAAK,IAAK,IAAK,IAAK,KAE3BC,WAAa,SAAbA,WAAaC,OAEdF,IAAIG,SAASD,QAAmB,KAATN,MACvBI,IAAIG,SAASD,QAAUF,IAAIG,SAASP,KAAKQ,OAAO,MAKnDP,QAAQD,KAAOM,OAEVF,IAAIG,SAASD,QAChBH,OAAOM,KAAKT,KAAOM,OAAOI,cAIxBC,aAAe,WAGnB,IAFA,IAAMC,EAAS,GADU,WAGhBC,GACPD,EAAOE,KACL,qEAAQC,QAAS,kBAAMV,WAAWQ,EAAEH,aAApC,SACGG,GADmDA,KAFjDA,EAAI,EAAGA,EAAI,GAAIA,IAAM,EAArBA,GAOT,OAAOD,GAGHI,UAAY,SAAZA,YACJf,QAAQQ,KAAKT,MAAMU,aAGfO,WAAa,WACjB,GAAa,KAATjB,KAAJ,CAGA,IAAMM,EAAQN,KAAKQ,MAAM,GAAI,GAC7BP,QAAQK,KAGV,OACE,kEAAKY,UAAU,MAAf,SACE,mEAAKA,UAAU,aAAf,UACE,mEAAKA,UAAU,UAAf,UACGhB,IAAM,kFAAQA,IAAR,OAAuB,GADhC,OAGGF,MAAQ,OAGX,mEAAKkB,UAAU,YAAf,UACE,qEAAQH,QAAS,kBAAMV,WAAW,MAAlC,eACA,qEAAQU,QAAS,kBAAMV,WAAW,MAAlC,eACA,qEAAQU,QAAS,kBAAMV,WAAW,MAAlC,eACA,qEAAQU,QAAS,kBAAMV,WAAW,MAAlC,eAEA,qEAAQU,QAASE,WAAjB,oBAGF,mEAAKC,UAAU,SAAf,UACGP,eACD,qEAAQI,QAAS,kBAAMV,WAAW,MAAlC,eACA,qEAAQU,QAAS,kBAAMV,WAAW,MAAlC,eACA,qEAAQU,QAASC,UAAjB,wBAOKlB,2B,+BC5Ef,iEAMAqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.056a7c3a.chunk.js","sourcesContent":["import { useState } from \"react\";\nconst App = () => {\n  const [calc, setCalc] = useState(\"\");\n  const [res, setRes] = useState(\"\");\n\n  const ops = [\"/\", \"*\", \"+\", \"-\", \".\"];\n\n  const updateCalc = value => {\n    if (\n      (ops.includes(value) && calc === \"\") ||\n      (ops.includes(value) && ops.includes(calc.slice(-1)))\n    ) {\n      return;\n    }\n\n    setCalc(calc + value);\n\n    if (!ops.includes(value)) {\n      setRes(eval(calc + value).toString());\n    }\n  };\n\n  const createDigits = () => {\n    const digits = [];\n\n    for (let i = 1; i < 10; i++) {\n      digits.push(\n        <button onClick={() => updateCalc(i.toString())} key={i}>\n          {i}\n        </button>\n      );\n    }\n    return digits;\n  };\n\n  const calculate = () => {\n    setCalc(eval(calc).toString());\n  };\n\n  const deleteLast = () => {\n    if (calc === \"\") {\n      return;\n    }\n    const value = calc.slice(0, -1);\n    setCalc(value);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"calculator\">\n        <div className=\"display\">\n          {res ? <span>({res})</span> : \"\"}\n          &nbsp;\n          {calc || \"0\"}\n        </div>\n\n        <div className=\"operators\">\n          <button onClick={() => updateCalc(\"/\")}>/</button>\n          <button onClick={() => updateCalc(\"*\")}>*</button>\n          <button onClick={() => updateCalc(\"+\")}>+</button>\n          <button onClick={() => updateCalc(\"-\")}>-</button>\n\n          <button onClick={deleteLast}>DEL</button>\n        </div>\n\n        <div className=\"digits\">\n          {createDigits()}\n          <button onClick={() => updateCalc(\"0\")}>0</button>\n          <button onClick={() => updateCalc(\".\")}>.</button>\n          <button onClick={calculate}>=</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}